name: essen-messenger-bot
region: sgp

# Database configuration
databases:
- name: db
  engine: PG
  version: "15"
  size: db-s-dev-database
  num_nodes: 1

services:
# Main Facebook Bot Service
- name: facebook-bot
  environment_slug: node-js
  github:
    branch: main
    deploy_on_push: true
    repo: Singabyte/essen-facebook-messenger
  build_command: npm install && npm run test:unit
  run_command: node src/index.js
  http_port: 3000
  instance_count: 1
  instance_size_slug: basic-xs
  routes:
  - path: /
  # Auto-scaling configuration for handling increased load
  autoscaling:
    min_instance_count: 1
    max_instance_count: 3
    metrics:
      cpu:
        percent: 70
      memory:
        percent: 80
  # Health check configuration
  health_check:
    http_path: /health
    initial_delay_seconds: 30
    period_seconds: 10
    timeout_seconds: 5
    success_threshold: 1
    failure_threshold: 3
  envs:
  - key: NODE_ENV
    value: production
  - key: PAGE_ACCESS_TOKEN
    type: SECRET
  - key: VERIFY_TOKEN
    type: SECRET
  - key: APP_SECRET
    type: SECRET
  - key: GEMINI_API_KEY
    type: SECRET
  - key: DATABASE_URL
    value: "${db.DATABASE_URL}"
  - key: PORT
    value: "3000"
  # Socket.io configuration
  - key: ADMIN_API_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app/api"
  - key: APP_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app"
  # Template caching configuration
  - key: TEMPLATE_CACHE_TTL
    value: "3600"
  - key: TEMPLATE_CACHE_MAX_SIZE
    value: "100"
  # Human-like response configuration
  - key: TYPING_DELAY_MIN
    value: "1000"
  - key: TYPING_DELAY_MAX
    value: "5000"
  - key: RESPONSE_DELAY_FACTOR
    value: "1.2"
  # Performance monitoring
  - key: ENABLE_PERFORMANCE_METRICS
    value: "true"
  - key: LOG_LEVEL
    value: "info"

# Admin API Service
- name: admin-api
  environment_slug: node-js
  github:
    branch: main
    deploy_on_push: true
    repo: Singabyte/essen-facebook-messenger
  source_dir: admin-interface/server
  build_command: npm install
  run_command: node src/index.js
  http_port: 4000
  instance_count: 1
  instance_size_slug: basic-xs
  routes:
  - path: /api
  # Health check for admin API
  health_check:
    http_path: /api/health
    initial_delay_seconds: 30
    period_seconds: 15
    timeout_seconds: 5
    success_threshold: 1
    failure_threshold: 3
  envs:
  - key: NODE_ENV
    value: production
  - key: JWT_SECRET
    type: SECRET
  - key: DATABASE_URL
    value: "${db.DATABASE_URL}"
  - key: PORT
    value: "4000"
  - key: FRONTEND_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app"
  - key: APP_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app"
  # Socket.io configuration for admin interface
  - key: SOCKET_IO_CORS_ORIGIN
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app"
  - key: SOCKET_IO_PATH
    value: "/api/socket.io/"
  # Monitoring configuration
  - key: ENABLE_METRICS
    value: "true"
  - key: LOG_LEVEL
    value: "info"
  # Bot service URL for monitoring proxy
  - key: BOT_SERVICE_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app"

# Admin UI Static Site
static_sites:
- name: admin-ui
  environment_slug: html
  github:
    branch: main
    deploy_on_push: true
    repo: Singabyte/essen-facebook-messenger
  source_dir: admin-interface/client
  build_command: npm install && npm run build
  output_dir: dist
  catchall_document: index.html
  routes:
  - path: /admin
  envs:
  - key: VITE_API_URL
    value: "https://essen-messenger-bot-zxxtw.ondigitalocean.app/api"